var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = TuringBenchmarking","category":"page"},{"location":"#TuringBenchmarking","page":"Home","title":"TuringBenchmarking","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for TuringBenchmarking.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [TuringBenchmarking]","category":"page"},{"location":"#TuringBenchmarking.extract_stan_data","page":"Home","title":"TuringBenchmarking.extract_stan_data","text":"extract_stan_data(model::DynamicPPL.Model)\n\nReturn a Dict which can be consumed by the corresponding Stan model.\n\n\n\n\n\n","category":"function"},{"location":"#TuringBenchmarking.make_turing_suite-Tuple{DynamicPPL.Model}","page":"Home","title":"TuringBenchmarking.make_turing_suite","text":"make_turing_suite(model; kwargs...)\n\nCreate default benchmark suite for model.\n\nKeyword arguments\n\nadbackends: a collection of adbackends to use. Defaults to Turing.Essential.ADBackend[Turing.Essential.ForwardDiffAD{40, true}(), Turing.Essential.ForwardDiffAD{100, true}(), Turing.Essential.ZygoteAD(), Turing.Essential.ReverseDiffAD{false}(), Turing.Essential.ReverseDiffAD{true}()].\nrun_once=true: if true, the body of each benchmark will be run once to avoid compilation to be included in the timings (this may occur if compilation runs longer than the allowed time limit).\nsave_grads=false: if true and run_once is true, the gradients from the initial execution will be saved and returned as the second return-value. This is useful if you want to check correctness of the gradients for different backends.\n\nNotes\n\nA separate \"parameter\" instance (DynamicPPL.VarInfo) will be created for each test. Hence if you have a particularly large model, you might want to only pass one adbackend at the time.\n\n\n\n\n\n","category":"method"},{"location":"#TuringBenchmarking.stan_model_string","page":"Home","title":"TuringBenchmarking.stan_model_string","text":"stan_model_string(model::DynamicPPL.Model)\n\nReturn a string defining the Stan model corresponding to model.\n\n\n\n\n\n","category":"function"}]
}
